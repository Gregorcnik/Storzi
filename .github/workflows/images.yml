name: Images

on:
  push:
    paths:
      - images/**
  pull_request:
    paths:
      - images/**
  workflow_dispatch:

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest

    outputs:
      images: ${{ github.event_name == 'workflow_dispatch' && steps.images.outputs.images || steps.filter.outputs.changes }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: List all images
        id: patterns
        run: |
          images=$(find images -mindepth 1 -maxdepth 1 -type d -printf '"%P"\n' | jq -c -s .)
          echo "images=$images" >> $GITHUB_OUTPUT

      - name: Construct the filter expression
        if: github.event_name != 'workflow_dispatch'
        id: expression
        env:
          patterns: ${{ steps.images.outputs.images }}
        run: |
          expression=$(echo "$images" | yq 'map({"key": ., "value": ("images/" + .)}) | from_entries')
          echo -e "expression=$expression" >> $GITHUB_OUTPUT

      - name: Filter the images
        if: github.event_name != 'workflow_dispatch'
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: ${{ steps.expression.outputs.expression }}

  deploy:
    name: Deploy (${{ matrix.image }})
    runs-on: ubuntu-latest

    needs:
      - setup

    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.setup.outputs.images) }}

    env:
      image: ${{ matrix.image }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: "ghcr.io"

      - name: Extract the Docker metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.organization }}/pattern-base-${{ matrix.image }}
          tags: |
            type=raw,value={{date 'YYYYMMDDhhmmss'}}
            type=raw,value=latest

      - name: Build and release the Docker image
        uses: docker/build-push-action@v6
        with:
          context: images/${{ matrix.image }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
